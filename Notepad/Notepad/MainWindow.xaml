<Window x:Class="Notepad.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Notepad"
        mc:Ignorable="d" 
        Title="MainWindow">
    <Window.Resources>
        <DataTemplate x:Key="NotepadPageTemplate">
            <Grid Height="100" Margin="0,4" Width="400">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="5*"></ColumnDefinition>
                    <ColumnDefinition Width="2*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <CheckBox IsChecked="{Binding IsSelected,Mode=TwoWay}"
                          Visibility="{Binding DataContext.IsMultipleSelect ,ElementName=rootLayout,Converter={StaticResource boolToVisibility}}"></CheckBox>
                <TextBlock Grid.Column="1" Grid.Row="0" Style="{StaticResource TitleTextBlockStyle}" Text="{Binding Title,Mode=OneWay}" MaxHeight="160" TextTrimming="CharacterEllipsis"></TextBlock>
                <TextBlock Grid.Column="1" Grid.Row="1" Style="{StaticResource BodyTextBlockStyle}" Text="{Binding Content,Mode=OneWay}" TextTrimming="CharacterEllipsis" Margin="0,4"></TextBlock>
                <TextBlock Grid.Column="1" Grid.Row="2" Style="{StaticResource CaptionTextBlockStyle}" Text="{Binding LastModifyDate,Mode=OneWay}"></TextBlock>
                <Image Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Source="{Binding CoverImageUri,Mode=OneTime}" Stretch="UniformToFill"
                           Margin="4,0,0,0"></Image>

            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="DetailsTemplate">
            <Grid Margin="40,12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>

                <TextBox x:Name="textBoxTitle" Grid.Row="0" Text="{Binding Title,Mode=TwoWay}" 
                         Style="{StaticResource TitleTextBoxStyle}" BorderThickness="0"
                         HorizontalAlignment="Left" MinWidth="320"></TextBox>
                <Border Grid.Row="1" Width="{Binding ActualWidth,ElementName=textBoxTitle}" 
                        BorderThickness="0,0.5" BorderBrush="LightGray" Margin="0,4"
                        HorizontalAlignment="Left"></Border>
                <TextBlock Grid.Row="2" Text="{Binding LastModifyDate, StringFormat=yyyy MMM d HH:MM}" Margin="0,4
                           " Style="{StaticResource CaptionTextBlockStyle}"></TextBlock>
                <TextBox Grid.Row="3" BorderThickness="0" Text="{Binding Content,Mode=TwoWay}" 
                     Style="{StaticResource BodyTextBoxStyle}" Margin="0,20"
                     AcceptsReturn="True" TextWrapping="Wrap"></TextBox>
            </Grid>
        </DataTemplate>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>-->
        <SolidColorBrush x:Key="Button.Static.Background" Color="White"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Padding" Value="4"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid x:Name="rootLayout">
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="columnLeft" Width="4*"></ColumnDefinition>
            <ColumnDefinition x:Name="columnRight" Width="6*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Style="{StaticResource ToolBarButtonStyle}" Command="{Binding AddCommand,Mode=OneWay}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Assets/add.png" ></Image>
                                <TextBlock VerticalAlignment="Center">Add</TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
                <Button Grid.Column="1" Style="{StaticResource ToolBarButtonStyle}" Command="{Binding DeleteCommand,Mode=OneWay}"
                        Visibility="{Binding IsMultipleSelect,Converter={StaticResource boolToVisibility}}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Assets/delete.png" ></Image>
                                <TextBlock VerticalAlignment="Center">Delete</TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
                <Button Grid.Column="3" Style="{StaticResource ToolBarButtonStyle}" Visibility="{Binding Visibility,ElementName=buttonCancel,Converter={StaticResource visibilityReverse}}" 
                        Command="{Binding SelectCommand,Mode=OneWay}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Assets/select.png"></Image>
                                <TextBlock VerticalAlignment="Center">Select</TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
                <Button x:Name="buttonCancel" Grid.Column="3" Style="{StaticResource ToolBarButtonStyle}" Visibility="{Binding IsMultipleSelect,Converter={StaticResource boolToVisibility}}"
                        Command="{Binding SelectCommand,Mode=OneWay}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Assets/cancel.png"></Image>
                                <TextBlock VerticalAlignment="Center">Cancel</TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
            </Grid>
            <ListView Grid.Row="1" x:Name="listView" ItemsSource="{Binding Pages}" 
                      ScrollViewer.VerticalScrollBarVisibility="Hidden" BorderThickness="0"
              ItemTemplate="{StaticResource NotepadPageTemplate}"></ListView>
        </Grid>
        
        <Border Grid.Column="1" BorderThickness="0.5,0,0,0" BorderBrush="LightGray">
            <ContentControl  Content="{Binding SelectedItem,ElementName=listView}"
                        ContentTemplate="{StaticResource DetailsTemplate}"></ContentControl>
        </Border>
    </Grid>
</Window>
